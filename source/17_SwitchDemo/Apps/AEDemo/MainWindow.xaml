<Window
	x:Class="AEDemo.MainWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:behav="clr-namespace:AEDemo.Behaviors"
	xmlns:conv="clr-namespace:AEDemo.Converters"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	Title="MainWindow"
	Width="825"
	Height="650"
	mc:Ignorable="d">
	<Grid>
		<Grid.Resources>
			<conv:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
		</Grid.Resources>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>

		<StackPanel
			Grid.Row="0"
			Margin="3"
			Orientation="Horizontal">

			<Button
				Margin="3"
				HorizontalAlignment="Left"
				VerticalAlignment="Stretch"
				Command="{Binding OpenFileCommand}">
				<Image
					Height="32"
					SnapsToDevicePixels="True"
					Source="{DynamicResource Image_OpenFile}" />
			</Button>

			<ToolBarTray
				Grid.Row="1"
				VerticalAlignment="Center"
				SnapsToDevicePixels="True"
				ToolTip="Copy">
				<ToolBar
					VerticalAlignment="Stretch"
					SnapsToDevicePixels="True"
					ToolBarTray.IsLocked="True">

					<!--
						The bindings for Cut, Copy, Paste, Delete, Undo, Redo below work only in a Menu or Toolbar
						They can be implemented via seperate class eg.: 'ApplicationCommands.Cut'
						but you will have to create that class to use the bindings somewhere else
						https://stackoverflow.com/questions/7563666/copy-and-paste-commands-with-wpf-buttons
					-->
					<Button
						Margin="3,0"
						HorizontalAlignment="Left"
						VerticalAlignment="Center"
						Command="Copy"
						SnapsToDevicePixels="True"
						ToolTip="Copy">
						<Image
							Height="32"
							SnapsToDevicePixels="True"
							Source="{DynamicResource Image_Copy}" />
					</Button>
					<Button
						Margin="3,0"
						HorizontalAlignment="Left"
						VerticalAlignment="Center"
						Command="Cut"
						SnapsToDevicePixels="True"
						ToolTip="Cut">
						<Image
							Height="32"
							SnapsToDevicePixels="True"
							Source="{DynamicResource Image_Cut}" />
					</Button>
					<Button
						Margin="3,0"
						HorizontalAlignment="Left"
						VerticalAlignment="Center"
						Command="Paste"
						SnapsToDevicePixels="True"
						ToolTip="Paste">
						<Image
							Height="32"
							SnapsToDevicePixels="True"
							Source="{DynamicResource Image_Paste}" />
					</Button>
					<Button
						Margin="3,0"
						HorizontalAlignment="Left"
						VerticalAlignment="Center"
						Command="Delete"
						SnapsToDevicePixels="True"
						ToolTip="Delete">
						<Image
							Height="32"
							SnapsToDevicePixels="True"
							Source="{DynamicResource Image_Delete}" />
					</Button>
					<Separator Margin="3" />

					<Button
						Margin="3,0"
						HorizontalAlignment="Left"
						VerticalAlignment="Center"
						Command="Undo"
						SnapsToDevicePixels="True"
						ToolTip="Undo">
						<Image
							Height="32"
							SnapsToDevicePixels="True"
							Source="{DynamicResource Image_Undo}" />
					</Button>
					<Button
						Margin="3,0"
						HorizontalAlignment="Left"
						VerticalAlignment="Center"
						Command="Redo"
						SnapsToDevicePixels="True"
						ToolTip="Redo">
						<Image
							Height="32"
							SnapsToDevicePixels="True"
							Source="{DynamicResource Image_Redo}" />
					</Button>

					<ComboBox
						MinWidth="50"
						Margin="0,0,3,3"
						behav:SelectionChangedCommand.ChangedCommand="{Binding HighlightingChangeCommand}"
						DataContext="{Binding DocumentRoot}"
						DisplayMemberPath="Name"
						ItemsSource="{Binding HighlightingDefinitions, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
						SelectedItem="{Binding HighlightingDefinition, UpdateSourceTrigger=PropertyChanged}"
						Visibility="{Binding HighlightingDefinition, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource NullToVisibilityConverter}}" />

					<ComboBox
						Grid.Column="2"
						MinWidth="50"
						Margin="0,0,3,3"
						behav:SelectedIndexChangedBehavior.ChangedCommand="{Binding DocumentsListChangeCommand}"
						DataContext="{Binding DocumentRoot}"
						ItemsSource="{Binding DocumentsList, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
						SelectedIndex="{Binding DocumentsLists_SelectedIndex, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
				</ToolBar>
			</ToolBarTray>


		</StackPanel>

		<Grid
			Grid.Row="1"
			Grid.Column="0"
			Grid.ColumnSpan="2"
			Margin="3">
			<Grid.RowDefinitions>
				<RowDefinition Height="*" />
			</Grid.RowDefinitions>

			<Grid xmlns:avEditEx="clr-namespace:TextEditLib;assembly=TextEditLib" Grid.Row="0">
				<avEditEx:TextEdit
					DataContext="{Binding DocumentRoot}"
					Document="{Binding CurrentDocumentView.Document, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
					FontFamily="Consola"
					FontSize="{Binding Path=SizeUnitLabel.ScreenPoints, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
					IsModified="{Binding Path=CurrentDocumentView.IsDirty, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
					IsReadOnly="{Binding Path=CurrentDocumentView.IsReadOnly, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
					SyntaxHighlighting="{Binding HighlightingDefinition, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
			</Grid>
		</Grid>
	</Grid>
</Window>
