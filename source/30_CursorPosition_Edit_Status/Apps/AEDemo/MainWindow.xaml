<Window
    x:Class="AEDemo.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    
    xmlns:behav="clr-namespace:AEDemo.Behaviors"
    xmlns:conv="clr-namespace:AEDemo.Converters"
    
    Title="MainWindow"
    Width="525"
    Height="350"
    mc:Ignorable="d">
    <Grid>
        <Grid.Resources>
            <conv:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
            <conv:BoolToStringPropConverter x:Key="OverStrikeModeConverter"
                                            TrueValue="Overwrite"
                                            FalseValue="Insert" />
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <StackPanel
            Grid.Row="0"
            Margin="3"
            Orientation="Horizontal">

            <Button
                Margin="3"
                HorizontalAlignment="Left"
                VerticalAlignment="Stretch"
                Command="{Binding OpenFileCommand}"
                >
                <Image
                    Height="32"
                    SnapsToDevicePixels="True"
                    Source="{DynamicResource Image_OpenFile}" />
            </Button>

            <ToolBarTray
                Grid.Row="1"
                VerticalAlignment="Center"
                SnapsToDevicePixels="True"
                ToolTip="Copy">
                <ToolBar
                    VerticalAlignment="Stretch"
                    SnapsToDevicePixels="True"
                    ToolBarTray.IsLocked="True">

                    <!--
                        The bindings for Cut, Copy, Paste, Delete, Undo, Redo below work only in a Menu or Toolbar
                        They can be implemented via seperate class eg.: 'ApplicationCommands.Cut'
                        but you will have to create that class to use the bindings somewhere else
                        https://stackoverflow.com/questions/7563666/copy-and-paste-commands-with-wpf-buttons
                    -->
                    <Button
                        Margin="3,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Command="Copy"
                        SnapsToDevicePixels="True"
                        ToolTip="Copy">
                        <Image
                            Height="32"
                            SnapsToDevicePixels="True"
                            Source="{DynamicResource Image_Copy}" />
                    </Button>
                    <Button
                        Margin="3,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Command="Cut"
                        SnapsToDevicePixels="True"
                        ToolTip="Cut">
                        <Image
                            Height="32"
                            SnapsToDevicePixels="True"
                            Source="{DynamicResource Image_Cut}" />
                    </Button>
                    <Button
                        Margin="3,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Command="Paste"
                        SnapsToDevicePixels="True"
                        ToolTip="Paste">
                        <Image
                            Height="32"
                            SnapsToDevicePixels="True"
                            Source="{DynamicResource Image_Paste}" />
                    </Button>
                    <Button
                        Margin="3,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Command="Delete"
                        SnapsToDevicePixels="True"
                        ToolTip="Delete">
                        <Image
                            Height="32"
                            SnapsToDevicePixels="True"
                            Source="{DynamicResource Image_Delete}" />
                    </Button>
                    <Separator Margin="3" />

                    <Button
                        Margin="3,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Command="Undo"
                        SnapsToDevicePixels="True"
                        ToolTip="Undo">
                        <Image
                            Height="32"
                            SnapsToDevicePixels="True"
                            Source="{DynamicResource Image_Undo}" />
                    </Button>
                    <Button
                        Margin="3,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Command="Redo"
                        SnapsToDevicePixels="True"
                        ToolTip="Redo">
                        <Image
                            Height="32"
                            SnapsToDevicePixels="True"
                            Source="{DynamicResource Image_Redo}" />
                    </Button>

                    <ComboBox
                        Grid.Column="1"
                        MinWidth="50"
                        Margin="0,0,3,3"
                        DisplayMemberPath="Name"
                        behav:SelectionChangedCommand.ChangedCommand="{Binding DocumentRoot.HighlightingChangeCommand}"
                        ItemsSource="{Binding DocumentRoot.HighlightingDefinitions, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        SelectedItem="{Binding DocumentRoot.HighlightingDefinition, UpdateSourceTrigger=PropertyChanged}"
                        Visibility="{Binding DocumentRoot.HighlightingDefinition, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource NullToVisibilityConverter}}"
                    />
                </ToolBar>
            </ToolBarTray>
        </StackPanel>

        <Grid
            Grid.Row="1"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Margin="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Grid
                xmlns:avEditEx="clr-namespace:TextEditLib;assembly=TextEditLib"
                Grid.Row="0">
                <avEditEx:TextEdit
                    Name="avEdit"
                    DataContext="{Binding DocumentRoot}"
                    Document="{Binding Document, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                    IsModified="{Binding Path=IsDirty, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    IsReadOnly="{Binding IsReadOnly, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                    SyntaxHighlighting="{Binding HighlightingDefinition, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                    
                    Column="{Binding SynchronizedColumn,Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
                    Line="{Binding SynchronizedLine,Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"

                    FontSize="12"
                    FontFamily="Consola"
                    />
            </Grid>
        </Grid>

        <StatusBar Grid.Row="2">
            <StatusBarItem HorizontalAlignment="Right" Margin="0,0,21,0"
                           Visibility="{Binding DocumentRoot.IsContentLoaded,Converter={StaticResource BooleanToVisibilityConverter}}"
                           >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0"
                    Margin="3,0,3,0"
                    Text="Ln:"
                    ToolTip="Current Line">
                    <TextBlock Text="{Binding DocumentRoot.SynchronizedLine, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                </TextBlock>
                    
                <TextBlock  Grid.Column="1"
                    Margin="0,0,3,0"
                    Text=", Col:"
                    ToolTip="Current Column">
                    <TextBlock Text="{Binding DocumentRoot.SynchronizedColumn, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                </TextBlock>

                <TextBlock
                    Grid.Column="2"
                    Text="{Binding ElementName=avEdit,Path=TextArea.OverstrikeMode,Converter={StaticResource OverStrikeModeConverter}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                    ToolTip="Determines whether the next typed character is overwritten or inserted"
                    Margin="0,0,3,0"
                />

                <TextBlock
                    Grid.Column="3"
                    Text="{Binding FileEncoding.EncodingName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                    ToolTip="{Binding FileEncodingDescription, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                    DataContext="{Binding DocumentRoot}"
                    Margin="0,0,3,0"
                />

                </Grid>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
