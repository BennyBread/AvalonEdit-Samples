<Window
    x:Class="AEDemo.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    
    xmlns:behav="clr-namespace:AEDemo.Behaviors"
    xmlns:conv="clr-namespace:AEDemo.Converters"
    xmlns:aeditCmd="clr-namespace:ICSharpCode.AvalonEdit;assembly=ICSharpCode.AvalonEdit"
    xmlns:editCmd="clr-namespace:TextEditLib;assembly=TextEditLib"
    
    Title="MainWindow"
    Width="525"
    Height="350"
    mc:Ignorable="d">
    <Grid>
        <Grid.Resources>
            <conv:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <StackPanel
            Grid.Row="0"
            Margin="3"
            Orientation="Horizontal">

            <Button
                Margin="3"
                HorizontalAlignment="Left"
                VerticalAlignment="Stretch"
                Command="{Binding OpenFileCommand}"
                >
                <Image
                    Height="32"
                    SnapsToDevicePixels="True"
                    Source="{DynamicResource Image_OpenFile}" />
            </Button>

            <ToolBarTray
                Grid.Row="1"
                VerticalAlignment="Center"
                SnapsToDevicePixels="True"
                ToolTip="Copy">
                <ToolBar
                    VerticalAlignment="Stretch"
                    SnapsToDevicePixels="True"
                    ToolBarTray.IsLocked="True">

                    <!--
                        The bindings for Cut, Copy, Paste, Delete, Undo, Redo below work only in a Menu or Toolbar
                        They can be implemented via seperate class eg.: 'ApplicationCommands.Cut'
                        but you will have to create that class to use the bindings somewhere else
                        https://stackoverflow.com/questions/7563666/copy-and-paste-commands-with-wpf-buttons
                    -->
                    <Button
                        Margin="3,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Command="Copy"
                        SnapsToDevicePixels="True"
                        ToolTip="Copy">
                        <Image
                            Height="32"
                            SnapsToDevicePixels="True"
                            Source="{DynamicResource Image_Copy}" />
                    </Button>
                    <Button
                        Margin="3,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Command="Cut"
                        SnapsToDevicePixels="True"
                        ToolTip="Cut">
                        <Image
                            Height="32"
                            SnapsToDevicePixels="True"
                            Source="{DynamicResource Image_Cut}" />
                    </Button>
                    <Button
                        Margin="3,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Command="Paste"
                        SnapsToDevicePixels="True"
                        ToolTip="Paste">
                        <Image
                            Height="32"
                            SnapsToDevicePixels="True"
                            Source="{DynamicResource Image_Paste}" />
                    </Button>
                    <Button
                        Margin="3,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Command="Delete"
                        SnapsToDevicePixels="True"
                        ToolTip="Delete">
                        <Image
                            Height="32"
                            SnapsToDevicePixels="True"
                            Source="{DynamicResource Image_Delete}" />
                    </Button>
                    <Separator Margin="3" />

                    <Button
                        Margin="3,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Command="Undo"
                        SnapsToDevicePixels="True"
                        ToolTip="Undo">
                        <Image
                            Height="32"
                            SnapsToDevicePixels="True"
                            Source="{DynamicResource Image_Undo}" />
                    </Button>
                    <Button
                        Margin="3,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Command="Redo"
                        SnapsToDevicePixels="True"
                        ToolTip="Redo">
                        <Image
                            Height="32"
                            SnapsToDevicePixels="True"
                            Source="{DynamicResource Image_Redo}" />
                    </Button>

                    <ComboBox
                        Grid.Column="1"
                        MinWidth="50"
                        Margin="0,0,3,3"
                        DisplayMemberPath="Name"
                        behav:SelectionChangedCommand.ChangedCommand="{Binding DocumentRoot.HighlightingChangeCommand}"
                        ItemsSource="{Binding DocumentRoot.HighlightingDefinitions, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        SelectedItem="{Binding DocumentRoot.HighlightingDefinition, UpdateSourceTrigger=PropertyChanged}"
                        Visibility="{Binding DocumentRoot.HighlightingDefinition, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource NullToVisibilityConverter}}"
                    />
                </ToolBar>
            </ToolBarTray>


        </StackPanel>

        <Grid
            Grid.Row="1"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Margin="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Grid
                xmlns:avEditEx="clr-namespace:TextEditLib;assembly=TextEditLib"
                Grid.Row="0">
                <avEditEx:TextEdit
                    DataContext="{Binding DocumentRoot}"
                    Document="{Binding Document, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                    IsModified="{Binding Path=IsDirty, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    IsReadOnly="{Binding IsReadOnly, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                    SyntaxHighlighting="{Binding HighlightingDefinition, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                    FontSize="12"
                    FontFamily="Consola"
                    >
                    <avEditEx:TextEdit.ContextMenu>
                        <ContextMenu>
                        <MenuItem Command="Cut" Header="Cut">
                            <MenuItem.Icon>
                                <Image Height="16"
                                   SnapsToDevicePixels="True"
                                   Source="{DynamicResource Image_Cut}" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Command="Copy" Header="Copy">
                            <MenuItem.Icon>
                                <Image Height="16"
                                   SnapsToDevicePixels="True"
                                   Source="{DynamicResource Image_Copy}" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Command="Paste" Header="Paste">
                            <MenuItem.Icon>
                                <Image Height="16"
                                   SnapsToDevicePixels="True"
                                   Source="{DynamicResource Image_Paste}" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Command="Delete" Header="Delete">
                            <MenuItem.Icon>
                                <Image Height="16"
                                   SnapsToDevicePixels="True"
                                   Source="{DynamicResource Image_Delete}" />
                            </MenuItem.Icon>
                        </MenuItem>

                        <Separator />

                        <MenuItem Command="Undo" Header="Undo">
                            <MenuItem.Icon>
                                <Image Height="16"
                                   SnapsToDevicePixels="True"
                                   Source="{DynamicResource Image_Undo}" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Command="Redo" Header="Redo">
                            <MenuItem.Icon>
                                <Image Height="16"
                                   SnapsToDevicePixels="True"
                                   Source="{DynamicResource Image_Redo}" />
                            </MenuItem.Icon>
                        </MenuItem>

                        <Separator/>
                        <MenuItem
                            Command="{x:Static aeditCmd:AvalonEditCommands.DeleteLine}"
                            Header="Delete Line"
                            ToolTip="Delete the current text line" />

                        <MenuItem Header="White Spaces">
                            <MenuItem Command="{x:Static aeditCmd:AvalonEditCommands.RemoveLeadingWhitespace}"
                                Header="Remove Leading White Spaces" />

                            <MenuItem Command="{x:Static aeditCmd:AvalonEditCommands.RemoveTrailingWhitespace}"
                                Header="Remove Trailing White Spaces" />

                            <MenuItem Command="{x:Static aeditCmd:AvalonEditCommands.ConvertTabsToSpaces}"
                                Header="Convert Tabs To Spaces" />

                            <MenuItem Command="{x:Static aeditCmd:AvalonEditCommands.ConvertSpacesToTabs}"
                                Header="Convert Spaces To Tabs" />

                            <MenuItem Command="{x:Static aeditCmd:AvalonEditCommands.ConvertLeadingTabsToSpaces}"
                                Header="Convert Leading Tabs To Spaces" />

                            <MenuItem Command="{x:Static aeditCmd:AvalonEditCommands.ConvertLeadingSpacesToTabs}"
                                Header="Convert Leading Spaces To Tabs" />
                        </MenuItem>

                        <MenuItem Header="Text Case">
                            <MenuItem Command="{x:Static aeditCmd:AvalonEditCommands.ConvertToUppercase}"
                                Header="Convert Text To Upper Case" />

                            <MenuItem Command="{x:Static aeditCmd:AvalonEditCommands.ConvertToLowercase}"
                                Header="Convert Text To Lower Case" />

                            <MenuItem Command="{x:Static aeditCmd:AvalonEditCommands.ConvertToTitleCase}"
                                Header="Convert Text To Title Case" />

                            <MenuItem Command="{x:Static aeditCmd:AvalonEditCommands.InvertCase}"
                                Header="Invert Text Case" />
                        </MenuItem>

                        <!--MenuItem Command="{x:Static aeditCmd:AvalonEditCommands.IndentSelection}"
                            Header="Apply Text Indentation Strategy" /-->

                            <MenuItem Command="{x:Static editCmd:TextEditCommands.FoldsCollapseAll}"
                            Header="Collapse Text Foldings" />

                            <MenuItem Command="{x:Static editCmd:TextEditCommands.FoldsExpandAll}"
                            Header="Expand Text Foldings" />

                        </ContextMenu>
                    </avEditEx:TextEdit.ContextMenu>
                </avEditEx:TextEdit>
            </Grid>
        </Grid>
    </Grid>
</Window>
